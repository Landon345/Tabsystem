{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/CreateTabs.jsx\";\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n/**Fetch and return the data from https://intern-pokedex.myriadapps.com/api/v1/pokemon/?page=${page}&name=${queryString}*/\n\nconst fetchData = async key => {\n  const response = await fetch(`http://tabsystem.test/api/users`, {\n    method: \"Get\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function CreateTabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const {\n    status,\n    data,\n    error\n  } = useQuery(\"key\", fetchData, {}); //if loading return Loading with a spinner and skeleton\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    })));\n  } //if error return the error\n\n\n  if (status === \"error\") return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 34\n    }\n  }, \"error\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, data.map(user => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, user.name)));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/CreateTabs.jsx"],"names":["React","useQuery","Input","Grid","Box","Icon","Skeleton","Spinner","fetchData","key","response","fetch","method","mode","cache","credentials","headers","Authorization","localStorage","getItem","redirect","referrerPolicy","data","json","console","log","CreateTabs","status","error","map","user","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,OAA3C,QAA0D,iBAA1D;AAEA;;AACA,MAAMC,SAAS,GAAG,MAAOC,GAAP,IAAe;AAC/B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAF,EAAoC;AAC9DC,IAAAA,MAAM,EAAE,KADsD;AAE9DC,IAAAA,IAAI,EAAE,MAFwD;AAEhD;AACdC,IAAAA,KAAK,EAAE,UAHuD;AAG3C;AACnBC,IAAAA,WAAW,EAAE,MAJiD;AAIzC;AACrBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADhD;AAEP,sBAAgB;AAFT,KALqD;AAS9DC,IAAAA,QAAQ,EAAE,QAToD;AAS1C;AACpBC,IAAAA,cAAc,EAAE,aAV8C,CAU/B;;AAV+B,GAApC,CAA5B;AAaA,QAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAjBD;;AAmBA,eAAe,SAASI,UAAT,GAAsB;AACnC;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUL,IAAAA,IAAV;AAAgBM,IAAAA;AAAhB,MAA0B3B,QAAQ,CAAC,KAAD,EAAQO,SAAR,EAAmB,EAAnB,CAAxC,CAFmC,CAInC;;AACA,MAAImB,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,QAAQ,EAAC,MAAjC;AAAwC,MAAA,EAAE,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACa,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,CADF,eAIE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAYD,GAlBkC,CAmBnC;;;AACA,MAAIA,MAAM,KAAK,OAAf,EAAwB,oBAAO;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AAExB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACO,GAAL,CAAUC,IAAD,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAI,CAACC,IAAX,CADD,CADH,CADF;AAOD","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n\n/**Fetch and return the data from https://intern-pokedex.myriadapps.com/api/v1/pokemon/?page=${page}&name=${queryString}*/\nconst fetchData = async (key) => {\n  const response = await fetch(`http://tabsystem.test/api/users`, {\n    method: \"Get\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n  });\n\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function CreateTabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const { status, data, error } = useQuery(\"key\", fetchData, {});\n\n  //if loading return Loading with a spinner and skeleton\n  if (status === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //if error return the error\n  if (status === \"error\") return <div className=\"\">error</div>;\n\n  return (\n    <div>\n      {data.map((user) => (\n        <div>{user.name}</div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}