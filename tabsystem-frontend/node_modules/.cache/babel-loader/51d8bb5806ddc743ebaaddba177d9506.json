{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport Navbar from \"../../Components/Navbar\";\nimport CreateTab from \"./CreateTab\";\nimport TabCard from \"./TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const {\n    status: status1,\n    data: tabsData\n  } = useQuery(\"GetTabs\", GetTabs, {});\n  const {\n    status: status2,\n    data: usersData\n  } = useQuery(\"GetUsers\", GetUsers, {}); //if loading return Loading with a spinner and skeleton\n\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  } //if error return the error\n\n\n  if (status === \"error\" || status2 === \"error\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateTab, {\n    users: usersData.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    mx: \"20px\",\n    py: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, data.tabs.map(tab => /*#__PURE__*/React.createElement(Link, {\n    key: tab.id,\n    to: `/tabs/detail/${tab.id}`,\n    style: {\n      textDecoration: \"none\",\n      color: \"black\",\n      margin: \"20px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Tab Name: \", tab.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Site # \", tab.users.site_number), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"User's Name: \", tab.users.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Balance: \", tab.balance))))));\n} // function TabCard({ id, name, balance, user_name, items }) {\n//   return (\n//     <Box border=\"1px solid black\" textAlign=\"center\">\n//       <p>Tab Name: {name}</p>\n//       <p>User's Name: {user_name}</p>\n//       <Box borderBottom=\"1px solid gray\" mx=\"5%\" />\n//       <p>Tab Items: </p>\n//       {items.map((item) => (\n//         <div>\n//           <Item\n//             id={item.id}\n//             name={item.name}\n//             price={item.price}\n//             date={item.created_at}\n//           />\n//         </div>\n//       ))}\n//       <Box borderBottom=\"1px solid gray\" mx=\"5%\" />\n//       <p>Add a new Item</p>\n//       <CreateItem tab_id={id} />\n//     </Box>\n//   );\n// }\n// function Item({ id, name, price, date }) {\n//   return (\n//     <div>\n//       <p>name: {name}</p>\n//       <p>price: {price}</p>\n//       <p>date: {date}</p>\n//     </div>\n//   );\n// }\n// function CreateItem({ tab_id }) {\n//   const [name, setName] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [price, setPrice] = useState([]);\n//   const [message, setMessage] = useState([]);\n//   const handleChange = (event) => {\n//     if ([event.target.name] == \"name\") {\n//       setName(event.target.value);\n//     } else if ([event.target.name] == \"price\") {\n//       setPrice(event.target.value);\n//     }\n//   };\n//   const newItem = async (e) => {\n//     e.preventDefault();\n//     const item = {\n//       tab_id: tab_id,\n//       category_id: 1,\n//       name: name,\n//       price: parseInt(price),\n//     };\n//     console.log(item);\n//     const response = await fetch(`http://tabsystem.test/api/item`, {\n//       method: \"POST\",\n//       mode: \"cors\", // no-cors, *cors, same-origin\n//       cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n//       credentials: \"omit\", // include, *same-origin, omit\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         \"content-type\": \"application/json\",\n//       },\n//       redirect: \"follow\", // manual, *follow, error\n//       referrerPolicy: \"no-referrer\", // no-referrer, *client\n//       body: JSON.stringify(item),\n//     });\n//     const data = await response.json();\n//     console.log(data);\n//     if (data.success) {\n//       setMessage(\"Successfully created item\");\n//     } else {\n//       setMessage(\"Something went wrong\");\n//     }\n//   };\n//   return (\n//     <div>\n//       <h3>Put a new item</h3>\n//       <div>\n//         <form onSubmit={newItem}>\n//           <label>Item Name</label>\n//           <input type=\"text\" onChange={handleChange} value={name} name=\"name\" />\n//           <label>Price</label>\n//           <input\n//             type=\"number\"\n//             onChange={handleChange}\n//             value={price}\n//             name=\"price\"\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       </div>\n//       {message}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx"],"names":["React","useState","Link","useQuery","useMutation","queryCache","GetTabs","GetUsers","Navbar","CreateTab","TabCard","Input","Grid","Box","Icon","Skeleton","Spinner","Tabs","status","status1","data","tabsData","status2","usersData","users","tabs","map","tab","id","textDecoration","color","margin","name","site_number","balance"],"mappings":"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AAJ,CAAUS,WAArB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBN,GAAG,CAACH,KAAJ,CAAUQ,IAA3B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaL,GAAG,CAACO,OAAjB,CAJF,CATF,CADD,CANH,CAHF,CADF;AA+BD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport Navbar from \"../../Components/Navbar\";\nimport CreateTab from \"./CreateTab\";\nimport TabCard from \"./TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const { status: status1, data: tabsData } = useQuery(\"GetTabs\", GetTabs, {});\n  const { status: status2, data: usersData } = useQuery(\n    \"GetUsers\",\n    GetUsers,\n    {}\n  );\n\n  //if loading return Loading with a spinner and skeleton\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //if error return the error\n  if (status === \"error\" || status2 === \"error\") {\n    return <div className=\"\">error</div>;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <CreateTab users={usersData.users} />\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(auto-fit, minmax(300px, 1fr))\"\n        mx=\"20px\"\n        py=\"20px\"\n      >\n        {data.tabs.map((tab) => (\n          <Link\n            key={tab.id}\n            to={`/tabs/detail/${tab.id}`}\n            style={{\n              textDecoration: \"none\",\n              color: \"black\",\n              margin: \"20px 0px\",\n            }}\n          >\n            <div>\n              <p>Tab Name: {tab.name}</p>\n              <p>Site # {tab.users.site_number}</p>\n              <p>User's Name: {tab.users.name}</p>\n              <p>Balance: {tab.balance}</p>\n            </div>\n          </Link>\n        ))}\n      </Box>\n    </div>\n  );\n}\n\n// function TabCard({ id, name, balance, user_name, items }) {\n//   return (\n//     <Box border=\"1px solid black\" textAlign=\"center\">\n//       <p>Tab Name: {name}</p>\n//       <p>User's Name: {user_name}</p>\n//       <Box borderBottom=\"1px solid gray\" mx=\"5%\" />\n//       <p>Tab Items: </p>\n//       {items.map((item) => (\n//         <div>\n//           <Item\n//             id={item.id}\n//             name={item.name}\n//             price={item.price}\n//             date={item.created_at}\n//           />\n//         </div>\n//       ))}\n//       <Box borderBottom=\"1px solid gray\" mx=\"5%\" />\n//       <p>Add a new Item</p>\n//       <CreateItem tab_id={id} />\n//     </Box>\n//   );\n// }\n\n// function Item({ id, name, price, date }) {\n//   return (\n//     <div>\n//       <p>name: {name}</p>\n//       <p>price: {price}</p>\n//       <p>date: {date}</p>\n//     </div>\n//   );\n// }\n\n// function CreateItem({ tab_id }) {\n//   const [name, setName] = useState(\"\");\n//   const [category, setCategory] = useState(\"\");\n//   const [price, setPrice] = useState([]);\n//   const [message, setMessage] = useState([]);\n\n//   const handleChange = (event) => {\n//     if ([event.target.name] == \"name\") {\n//       setName(event.target.value);\n//     } else if ([event.target.name] == \"price\") {\n//       setPrice(event.target.value);\n//     }\n//   };\n\n//   const newItem = async (e) => {\n//     e.preventDefault();\n//     const item = {\n//       tab_id: tab_id,\n//       category_id: 1,\n//       name: name,\n//       price: parseInt(price),\n//     };\n//     console.log(item);\n//     const response = await fetch(`http://tabsystem.test/api/item`, {\n//       method: \"POST\",\n//       mode: \"cors\", // no-cors, *cors, same-origin\n//       cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n//       credentials: \"omit\", // include, *same-origin, omit\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//         \"content-type\": \"application/json\",\n//       },\n//       redirect: \"follow\", // manual, *follow, error\n//       referrerPolicy: \"no-referrer\", // no-referrer, *client\n//       body: JSON.stringify(item),\n//     });\n//     const data = await response.json();\n//     console.log(data);\n//     if (data.success) {\n//       setMessage(\"Successfully created item\");\n//     } else {\n//       setMessage(\"Something went wrong\");\n//     }\n//   };\n//   return (\n//     <div>\n//       <h3>Put a new item</h3>\n//       <div>\n//         <form onSubmit={newItem}>\n//           <label>Item Name</label>\n//           <input type=\"text\" onChange={handleChange} value={name} name=\"name\" />\n//           <label>Price</label>\n//           <input\n//             type=\"number\"\n//             onChange={handleChange}\n//             value={price}\n//             name=\"price\"\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       </div>\n\n//       {message}\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}