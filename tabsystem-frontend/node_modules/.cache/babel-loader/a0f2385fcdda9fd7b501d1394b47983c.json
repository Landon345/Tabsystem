{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { addOpacity, generateAlphaColors, get } from \"../theme/colors-utils\";\nimport { useTheme } from \"../ThemeProvider\";\nimport { useColorMode } from \"../ColorModeProvider\";\n\nvar solidStyle = function solidStyle(_ref) {\n  var colors = _ref.theme.colors,\n      color = _ref.color;\n\n  var _color = colors[color] && colors[color][500];\n\n  var darkModeBg = addOpacity(_color, 0.6);\n  return {\n    light: {\n      bg: get(color, 500),\n      color: \"white\"\n    },\n    dark: {\n      bg: darkModeBg,\n      color: \"whiteAlpha.800\"\n    }\n  };\n};\n\nvar subtleStyle = function subtleStyle(_ref2) {\n  var colors = _ref2.theme.colors,\n      color = _ref2.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var alphaColors = generateAlphaColors(_color);\n  var darkModeBg = alphaColors[300];\n  return {\n    light: {\n      bg: get(color, 100),\n      color: get(color, 800)\n    },\n    dark: {\n      bg: darkModeBg,\n      color: get(color, 200)\n    }\n  };\n};\n\nvar outlineStyle = function outlineStyle(_ref3) {\n  var colors = _ref3.theme.colors,\n      color = _ref3.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var darkModeColor = addOpacity(_color, 0.8);\n  var boxShadowColor = colors[color] && colors[color][500];\n  return {\n    light: {\n      boxShadow: \"inset 0 0 0px 1px \" + boxShadowColor,\n      color: get(color, 500)\n    },\n    dark: {\n      boxShadow: \"inset 0 0 0px 1px \" + darkModeColor,\n      color: darkModeColor\n    }\n  };\n};\n\nvar variantProps = function variantProps(props) {\n  var variant = props.variant,\n      colorMode = props.colorMode;\n\n  switch (variant) {\n    case \"solid\":\n      return solidStyle(props)[colorMode];\n\n    case \"subtle\":\n      return subtleStyle(props)[colorMode];\n\n    case \"outline\":\n      return outlineStyle(props)[colorMode];\n\n    default:\n      return {};\n  }\n};\n\nvar useBadgeStyle = function useBadgeStyle(props) {\n  var theme = useTheme();\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _props = _objectSpread({}, props, {\n    theme: theme,\n    colorMode: colorMode\n  });\n\n  return variantProps(_props);\n};\n\nexport default useBadgeStyle;","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/node_modules/@chakra-ui/core/dist/es/Badge/styles.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","addOpacity","generateAlphaColors","get","useTheme","useColorMode","solidStyle","_ref","colors","theme","color","_color","darkModeBg","light","bg","dark","subtleStyle","_ref2","alphaColors","outlineStyle","_ref3","darkModeColor","boxShadowColor","boxShadow","variantProps","props","variant","colorMode","useBadgeStyle","_useColorMode","_props"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addOpacity, generateAlphaColors, get } from \"../theme/colors-utils\";\nimport { useTheme } from \"../ThemeProvider\";\nimport { useColorMode } from \"../ColorModeProvider\";\n\nvar solidStyle = function solidStyle(_ref) {\n  var colors = _ref.theme.colors,\n      color = _ref.color;\n\n  var _color = colors[color] && colors[color][500];\n\n  var darkModeBg = addOpacity(_color, 0.6);\n  return {\n    light: {\n      bg: get(color, 500),\n      color: \"white\"\n    },\n    dark: {\n      bg: darkModeBg,\n      color: \"whiteAlpha.800\"\n    }\n  };\n};\n\nvar subtleStyle = function subtleStyle(_ref2) {\n  var colors = _ref2.theme.colors,\n      color = _ref2.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var alphaColors = generateAlphaColors(_color);\n  var darkModeBg = alphaColors[300];\n  return {\n    light: {\n      bg: get(color, 100),\n      color: get(color, 800)\n    },\n    dark: {\n      bg: darkModeBg,\n      color: get(color, 200)\n    }\n  };\n};\n\nvar outlineStyle = function outlineStyle(_ref3) {\n  var colors = _ref3.theme.colors,\n      color = _ref3.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var darkModeColor = addOpacity(_color, 0.8);\n  var boxShadowColor = colors[color] && colors[color][500];\n  return {\n    light: {\n      boxShadow: \"inset 0 0 0px 1px \" + boxShadowColor,\n      color: get(color, 500)\n    },\n    dark: {\n      boxShadow: \"inset 0 0 0px 1px \" + darkModeColor,\n      color: darkModeColor\n    }\n  };\n};\n\nvar variantProps = function variantProps(props) {\n  var variant = props.variant,\n      colorMode = props.colorMode;\n\n  switch (variant) {\n    case \"solid\":\n      return solidStyle(props)[colorMode];\n\n    case \"subtle\":\n      return subtleStyle(props)[colorMode];\n\n    case \"outline\":\n      return outlineStyle(props)[colorMode];\n\n    default:\n      return {};\n  }\n};\n\nvar useBadgeStyle = function useBadgeStyle(props) {\n  var theme = useTheme();\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _props = _objectSpread({}, props, {\n    theme: theme,\n    colorMode: colorMode\n  });\n\n  return variantProps(_props);\n};\n\nexport default useBadgeStyle;"]},"metadata":{},"sourceType":"module"}