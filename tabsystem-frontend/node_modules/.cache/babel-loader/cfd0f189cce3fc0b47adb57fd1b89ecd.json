{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedComponents/Register/Register.jsx\";\nimport React, { useState, useEffect } from \"react\"; //form imports\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\"; //component imports\n\nimport Navbar from \"../../Components/Navbar\";\nimport Auth from \"../../Auth\"; //style imports\n\nimport { Box, Icon } from \"@chakra-ui/core\";\nimport { Label, Form, FormInput, Button } from \"./Styles\";\nconst validationScema = Yup.object().shape({\n  name: Yup.string().required(\"Must enter an name\"),\n  password: Yup.string().min(4, \"All passwords are at least 4 characters long\").required(\"Must have a password\"),\n  site_number: Yup.string().max(4, \"Max length of 4\")\n});\nexport default function Register(props) {\n  const [message, setMessage] = useState(Auth.getRegisterMessage());\n  useEffect(() => {}, [message]);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    px: \"10%\",\n    height: \"90vh\",\n    bg: \"third100\",\n    py: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Login to tabsystem\"), /*#__PURE__*/React.createElement(Box, {\n    color: \"White\",\n    mt: \"15px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, message, \"...\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      password: \"\",\n      site_number: \"\"\n    },\n    validationSchema: validationScema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n      const user = {\n        site_number: values.site_number,\n        name: values.name,\n        password: values.password\n      };\n      Auth.register(message => {\n        //props.history.push(\"/dashboard\");\n        setMessage(message);\n      }, user);\n      console.log(Auth.getRegisterMessage());\n      setMessage(Auth.getRegisterMessage());\n      resetForm();\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"site_number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"site number\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"site_number\",\n    id: \"site_number\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.site_number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Error, {\n    touched: touched.site_number,\n    message: errors.site_number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Error, {\n    touched: touched.name,\n    message: errors.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Error, {\n    touched: touched.password,\n    message: errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    bg: \"first100\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nfunction Error({\n  touched,\n  message\n}) {\n  if (!touched) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 12\n      }\n    }, \"\\xA0\");\n  }\n\n  if (message) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"orange\",\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 12\n      }\n    }, message);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"white\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedComponents/Register/Register.jsx"],"names":["React","useState","useEffect","Formik","Yup","Navbar","Auth","Box","Icon","Label","Form","FormInput","Button","validationScema","object","shape","name","string","required","password","min","site_number","max","Register","props","message","setMessage","getRegisterMessage","values","setSubmitting","resetForm","user","register","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Error","color","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CACA;;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,QAA+C,UAA/C;AAEA,MAAMC,eAAe,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACzCC,EAAAA,IAAI,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,CADmC;AAEzCC,EAAAA,QAAQ,EAAEf,GAAG,CAACa,MAAJ,GACPG,GADO,CACH,CADG,EACA,8CADA,EAEPF,QAFO,CAEE,sBAFF,CAF+B;AAKzCG,EAAAA,WAAW,EAAEjB,GAAG,CAACa,MAAJ,GAAaK,GAAb,CAAiB,CAAjB,EAAoB,iBAApB;AAL4B,CAAnB,CAAxB;AAQA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAACK,IAAI,CAACqB,kBAAL,EAAD,CAAtC;AAEAzB,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACuB,OAAD,CAAX,CAAT;AAEA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,MAAM,EAAC,MAArB;AAA4B,IAAA,EAAE,EAAC,UAA/B;AAA0C,IAAA,EAAE,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,EAAE,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,QAFF,eAKE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAET,MAAAA,IAAI,EAAE,EAAR;AAAYG,MAAAA,QAAQ,EAAE,EAAtB;AAA0BE,MAAAA,WAAW,EAAE;AAAvC,KADjB;AAEE,IAAA,gBAAgB,EAAER,eAFpB;AAGE,IAAA,QAAQ,EAAE,CAACe,MAAD,EAAS;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAT,KAA0C;AAClDD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,YAAME,IAAI,GAAG;AACXV,QAAAA,WAAW,EAAEO,MAAM,CAACP,WADT;AAEXL,QAAAA,IAAI,EAAEY,MAAM,CAACZ,IAFF;AAGXG,QAAAA,QAAQ,EAAES,MAAM,CAACT;AAHN,OAAb;AAMAb,MAAAA,IAAI,CAAC0B,QAAL,CAAeP,OAAD,IAAa;AACzB;AACAC,QAAAA,UAAU,CAACD,OAAD,CAAV;AACD,OAHD,EAGGM,IAHH;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAY5B,IAAI,CAACqB,kBAAL,EAAZ;AACAD,MAAAA,UAAU,CAACpB,IAAI,CAACqB,kBAAL,EAAD,CAAV;AACAG,MAAAA,SAAS;AACTD,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBG,CAAC;AACAD,IAAAA,MADA;AAEAO,IAAAA,MAFA;AAGAC,IAAAA,OAHA;AAIAC,IAAAA,YAJA;AAKAC,IAAAA,UALA;AAMAC,IAAAA,YANA;AAOAC,IAAAA;AAPA,GAAD,kBASC;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,IAAA,QAAQ,EAAEF,YAJZ;AAKE,IAAA,MAAM,EAAEC,UALV;AAME,IAAA,KAAK,EAAEV,MAAM,CAACP,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEe,OAAO,CAACf,WADnB;AAEE,IAAA,OAAO,EAAEc,MAAM,CAACd,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,eAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,EAAE,EAAC,MAHL;AAIE,IAAA,QAAQ,EAAEgB,YAJZ;AAKE,IAAA,MAAM,EAAEC,UALV;AAME,IAAA,KAAK,EAAEV,MAAM,CAACZ,IANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEoB,OAAO,CAACpB,IAAxB;AAA8B,IAAA,OAAO,EAAEmB,MAAM,CAACnB,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAhBF,eA4BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,QAAQ,EAAEqB,YAJZ;AAKE,IAAA,MAAM,EAAEC,UALV;AAME,IAAA,KAAK,EAAEV,MAAM,CAACT,QANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEiB,OAAO,CAACjB,QAAxB;AAAkC,IAAA,OAAO,EAAEgB,MAAM,CAAChB,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CA5BF,eAwCE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAsB,IAAA,IAAI,EAAC,QAA3B;AAAoC,IAAA,QAAQ,EAAEqB,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAxCF,CA9BJ,CALF,CAFF,CADF;AA2FD;;AAED,SAASC,KAAT,CAAe;AAAEL,EAAAA,OAAF;AAAWX,EAAAA;AAAX,CAAf,EAAqC;AACnC,MAAI,CAACW,OAAL,EAAc;AACZ,wBAAO;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,MAAIjB,OAAJ,EAAa;AACX,wBAAO;AAAK,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDlB,OAAtD,CAAP;AACD;;AACD,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n//form imports\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n//component imports\nimport Navbar from \"../../Components/Navbar\";\nimport Auth from \"../../Auth\";\n//style imports\nimport { Box, Icon } from \"@chakra-ui/core\";\nimport { Label, Form, FormInput, Button } from \"./Styles\";\n\nconst validationScema = Yup.object().shape({\n  name: Yup.string().required(\"Must enter an name\"),\n  password: Yup.string()\n    .min(4, \"All passwords are at least 4 characters long\")\n    .required(\"Must have a password\"),\n  site_number: Yup.string().max(4, \"Max length of 4\"),\n});\n\nexport default function Register(props) {\n  const [message, setMessage] = useState(Auth.getRegisterMessage());\n\n  useEffect(() => {}, [message]);\n\n  return (\n    <Box>\n      <Navbar />\n      <Box px=\"10%\" height=\"90vh\" bg=\"third100\" py=\"20px\">\n        <h1>Login to tabsystem</h1>\n        <Box color=\"White\" mt=\"15px\">\n          {message}...\n        </Box>\n        <Formik\n          initialValues={{ name: \"\", password: \"\", site_number: \"\" }}\n          validationSchema={validationScema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            const user = {\n              site_number: values.site_number,\n              name: values.name,\n              password: values.password,\n            };\n\n            Auth.register((message) => {\n              //props.history.push(\"/dashboard\");\n              setMessage(message);\n            }, user);\n            console.log(Auth.getRegisterMessage());\n            setMessage(Auth.getRegisterMessage());\n            resetForm();\n            setSubmitting(false);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Form>\n                <Label htmlFor=\"site_number\">site number</Label>\n                <FormInput\n                  type=\"text\"\n                  name=\"site_number\"\n                  id=\"site_number\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.site_number}\n                />\n                <Error\n                  touched={touched.site_number}\n                  message={errors.site_number}\n                />\n              </Form>\n              <Form>\n                <Label htmlFor=\"name\">name</Label>\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                />\n                <Error touched={touched.name} message={errors.name} />\n              </Form>\n              <Form>\n                <Label htmlFor=\"password\">Password</Label>\n                <FormInput\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n                <Error touched={touched.password} message={errors.password} />\n              </Form>\n              <Form>\n                <Box></Box>\n                <Button bg=\"first100\" type=\"submit\" disabled={isSubmitting}>\n                  Register\n                </Button>\n                <Box></Box>\n              </Form>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Error({ touched, message }) {\n  if (!touched) {\n    return <div style={{ color: \"red\" }}>&nbsp;</div>;\n  }\n  if (message) {\n    return <div style={{ color: \"orange\", textAlign: \"right\" }}>{message}</div>;\n  }\n  return (\n    <div style={{ color: \"white\", textAlign: \"right\" }}>\n      <Icon name=\"check\" />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}