{"ast":null,"code":"import { BASE_URL } from \"./BaseUrl\";\nexport const GetItems = async (key, categoryid) => {\n  const response = await fetch(`${BASE_URL}/item/?category_id=${categoryid}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetItem = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/item/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PostItem = async newItem => {\n  const response = await fetch(`${BASE_URL}/item`, {\n    method: \"POST\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(newItem)\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PutItem = async updateItem => {\n  const response = await fetch(`${BASE_URL}/item`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(updateItem)\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const DeleteItemWithoutRefund = async id => {\n  const response = await fetch(`${BASE_URL}/item/${id}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const DeleteItemWithRefund = async id => {\n  const response = await fetch(`${BASE_URL}/itemrefund/${id}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/Api/Items.js"],"names":["BASE_URL","GetItems","key","categoryid","response","fetch","method","headers","Accept","Authorization","localStorage","getItem","data","json","console","log","GetItem","id","PostItem","newItem","mode","cache","credentials","accept","redirect","referrerPolicy","body","JSON","stringify","PutItem","updateItem","DeleteItemWithoutRefund","DeleteItemWithRefund"],"mappings":"AAAA,SAASA,QAAT,QAAyB,WAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,OAAOC,GAAP,EAAYC,UAAZ,KAA2B;AACjD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,sBAAqBG,UAAW,EAA7C,EAAgD;AAC1EG,IAAAA,MAAM,EAAE,KADkE;AAE1EC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE,kBAFD;AAGPC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAHhD;AAFiE,GAAhD,CAA5B;AAQA,QAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAZM;AAaP,OAAO,MAAMI,OAAO,GAAG,OAAOd,GAAP,EAAYe,EAAZ,KAAmB;AACxC,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,SAAQiB,EAAG,EAAxB,EAA2B;AACrDX,IAAAA,MAAM,EAAE,KAD6C;AAErDC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE,kBAFD;AAGPC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAHhD;AAF4C,GAA3B,CAA5B;AAQA,QAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAZM;AAaP,OAAO,MAAMM,QAAQ,GAAG,MAAOC,OAAP,IAAmB;AACzC,QAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,OAAb,EAAqB;AAC/CM,IAAAA,MAAM,EAAE,MADuC;AAE/Cc,IAAAA,IAAI,EAAE,MAFyC;AAEjC;AACdC,IAAAA,KAAK,EAAE,UAHwC;AAG5B;AACnBC,IAAAA,WAAW,EAAE,MAJkC;AAI1B;AACrBf,IAAAA,OAAO,EAAE;AACPE,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADhD;AAEP,sBAAgB,kBAFT;AAGPY,MAAAA,MAAM,EAAE;AAHD,KALsC;AAU/CC,IAAAA,QAAQ,EAAE,QAVqC;AAU3B;AACpBC,IAAAA,cAAc,EAAE,aAX+B;AAWhB;AAC/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AAZyC,GAArB,CAA5B;AAcA,QAAMP,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAlBM;AAmBP,OAAO,MAAMiB,OAAO,GAAG,MAAOC,UAAP,IAAsB;AAC3C,QAAM1B,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,OAAb,EAAqB;AAC/CM,IAAAA,MAAM,EAAE,KADuC;AAE/Cc,IAAAA,IAAI,EAAE,MAFyC;AAEjC;AACdC,IAAAA,KAAK,EAAE,UAHwC;AAG5B;AACnBC,IAAAA,WAAW,EAAE,MAJkC;AAI1B;AACrBf,IAAAA,OAAO,EAAE;AACPE,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADhD;AAEP,sBAAgB,kBAFT;AAGPY,MAAAA,MAAM,EAAE;AAHD,KALsC;AAU/CC,IAAAA,QAAQ,EAAE,QAVqC;AAU3B;AACpBC,IAAAA,cAAc,EAAE,aAX+B;AAWhB;AAC/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,UAAf;AAZyC,GAArB,CAA5B;AAcA,QAAMlB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAlBM;AAmBP,OAAO,MAAMmB,uBAAuB,GAAG,MAAOd,EAAP,IAAc;AACnD,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,SAAQiB,EAAG,EAAxB,EAA2B;AACrDX,IAAAA,MAAM,EAAE,QAD6C;AAErDc,IAAAA,IAAI,EAAE,MAF+C;AAEvC;AACdC,IAAAA,KAAK,EAAE,UAH8C;AAGlC;AACnBC,IAAAA,WAAW,EAAE,MAJwC;AAIhC;AACrBf,IAAAA,OAAO,EAAE;AACPE,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADhD;AAEP,sBAAgB,kBAFT;AAGPY,MAAAA,MAAM,EAAE;AAHD,KAL4C;AAUrDC,IAAAA,QAAQ,EAAE,QAV2C;AAUjC;AACpBC,IAAAA,cAAc,EAAE,aAXqC,CAWtB;;AAXsB,GAA3B,CAA5B;AAaA,QAAMb,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAjBM;AAkBP,OAAO,MAAMoB,oBAAoB,GAAG,MAAOf,EAAP,IAAc;AAChD,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,eAAciB,EAAG,EAA9B,EAAiC;AAC3DX,IAAAA,MAAM,EAAE,QADmD;AAE3Dc,IAAAA,IAAI,EAAE,MAFqD;AAE7C;AACdC,IAAAA,KAAK,EAAE,UAHoD;AAGxC;AACnBC,IAAAA,WAAW,EAAE,MAJ8C;AAItC;AACrBf,IAAAA,OAAO,EAAE;AACPE,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADhD;AAEP,sBAAgB,kBAFT;AAGPY,MAAAA,MAAM,EAAE;AAHD,KALkD;AAU3DC,IAAAA,QAAQ,EAAE,QAViD;AAUvC;AACpBC,IAAAA,cAAc,EAAE,aAX2C,CAW5B;;AAX4B,GAAjC,CAA5B;AAaA,QAAMb,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAjBM","sourcesContent":["import { BASE_URL } from \"./BaseUrl\";\n\nexport const GetItems = async (key, categoryid) => {\n  const response = await fetch(`${BASE_URL}/item/?category_id=${categoryid}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetItem = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/item/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PostItem = async (newItem) => {\n  const response = await fetch(`${BASE_URL}/item`, {\n    method: \"POST\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(newItem),\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PutItem = async (updateItem) => {\n  const response = await fetch(`${BASE_URL}/item`, {\n    method: \"PUT\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(updateItem),\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const DeleteItemWithoutRefund = async (id) => {\n  const response = await fetch(`${BASE_URL}/item/${id}`, {\n    method: \"DELETE\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const DeleteItemWithRefund = async (id) => {\n  const response = await fetch(`${BASE_URL}/itemrefund/${id}`, {\n    method: \"DELETE\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}