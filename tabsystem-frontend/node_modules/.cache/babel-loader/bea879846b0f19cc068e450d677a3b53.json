{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/CreateCategory/CreateCategory.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, queryCache, useMutation } from \"react-query\";\nimport { GetCategories, PostCategory, DeleteCategory } from \"../../Api/Categories\"; //styled component imports\n\nimport { Box, Icon, Grid, Skeleton, Spinner, Input } from \"@chakra-ui/core\";\nimport { MyButton, DeleteButton, CategoryAndCommonItemCard } from \"../../GlobalStyles/Styles\";\nimport \"./Styles\";\nimport Navbar from \"../../Components/Navbar\";\nexport default function CreateCategory() {\n  const [name, setName] = useState([]);\n  const {\n    status,\n    data,\n    error,\n    refetch\n  } = useQuery(\"GetCategories\", GetCategories, {});\n  const [mutatePostCategory] = useMutation(PostCategory, {\n    onMutate: newCategory => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      queryCache.cancelQueries(\"GetCategories\"); // Snapshot the previous value\n\n      const previousCateogories = queryCache.getQueryData(\"GetCategories\"); // Optimistically update to the new value\n\n      queryCache.setQueryData(\"GetCategories\", old => [...old, newCategory]); // Return the snapshotted value\n\n      return () => queryCache.setQueryData(\"GetCategories\", previousCateogories);\n    },\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, newCategory, rollback) => rollback(),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetCategories\");\n    }\n  });\n  const [mutateDeleteCategory] = useMutation(DeleteCategory, {\n    // When mutate is called:\n    onMutate: categoryIdPassed => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      queryCache.cancelQueries(\"GetCategories\"); // Snapshot the previous value\n\n      const previousCateogories = queryCache.getQueryData(\"GetCategories\"); // Return the snapshotted value\n\n      return () => queryCache.setQueryData(\"GetCategories\", previousCateogories);\n    },\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, categoryIdPassed, rollback) => rollback(),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetCategories\");\n    }\n  });\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const newCategory = async e => {\n    e.preventDefault();\n    const category = {\n      name: name\n    };\n    const data = await mutatePostCategory(category);\n    setName(\"\");\n  };\n\n  const deleteCategory = async id => {\n    const data = await mutateDeleteCategory(id);\n  }; //return this when loading\n\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    })));\n  } //return when error\n\n\n  if (status === \"error\") return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 34\n    }\n  }, \"error \", error);\n  return /*#__PURE__*/React.createElement(Box, {\n    bg: \"fourth100\",\n    minH: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: newCategory,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    d: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    color: \"White\",\n    fontSize: \"30px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"category name\"), /*#__PURE__*/React.createElement(Input, {\n    width: \"200px\",\n    height: \"30px\",\n    type: \"text\",\n    onChange: handleChange,\n    value: name,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyButton, {\n    bg: \"White\",\n    bgh: \"second100\",\n    bcf: \"fifth200\",\n    color: \"first200\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Grid, {\n    templateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n    gap: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, data.map((category, index) => /*#__PURE__*/React.createElement(CategoryAndCommonItemCard, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    bg: \"first300\",\n    p: \"3px 10px\",\n    borderRadius: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, category.name), /*#__PURE__*/React.createElement(DeleteButton, {\n    onClick: () => deleteCategory(category.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/CreateCategory/CreateCategory.jsx"],"names":["React","useState","useEffect","Link","useQuery","queryCache","useMutation","GetCategories","PostCategory","DeleteCategory","Box","Icon","Grid","Skeleton","Spinner","Input","MyButton","DeleteButton","CategoryAndCommonItemCard","Navbar","CreateCategory","name","setName","status","data","error","refetch","mutatePostCategory","onMutate","newCategory","cancelQueries","previousCateogories","getQueryData","setQueryData","old","onError","err","rollback","onSettled","refetchQueries","mutateDeleteCategory","categoryIdPassed","handleChange","event","target","value","e","preventDefault","category","deleteCategory","id","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, queryCache, useMutation } from \"react-query\";\nimport {\n  GetCategories,\n  PostCategory,\n  DeleteCategory,\n} from \"../../Api/Categories\";\n//styled component imports\nimport { Box, Icon, Grid, Skeleton, Spinner, Input } from \"@chakra-ui/core\";\nimport {\n  MyButton,\n  DeleteButton,\n  CategoryAndCommonItemCard,\n} from \"../../GlobalStyles/Styles\";\nimport {} from \"./Styles\";\n\nimport Navbar from \"../../Components/Navbar\";\n\nexport default function CreateCategory() {\n  const [name, setName] = useState([]);\n  const { status, data, error, refetch } = useQuery(\n    \"GetCategories\",\n    GetCategories,\n    {}\n  );\n  const [mutatePostCategory] = useMutation(PostCategory, {\n    onMutate: (newCategory) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      queryCache.cancelQueries(\"GetCategories\");\n\n      // Snapshot the previous value\n      const previousCateogories = queryCache.getQueryData(\"GetCategories\");\n\n      // Optimistically update to the new value\n      queryCache.setQueryData(\"GetCategories\", (old) => [...old, newCategory]);\n\n      // Return the snapshotted value\n      return () =>\n        queryCache.setQueryData(\"GetCategories\", previousCateogories);\n    },\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, newCategory, rollback) => rollback(),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetCategories\");\n    },\n  });\n  const [mutateDeleteCategory] = useMutation(DeleteCategory, {\n    // When mutate is called:\n    onMutate: (categoryIdPassed) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      queryCache.cancelQueries(\"GetCategories\");\n      // Snapshot the previous value\n      const previousCateogories = queryCache.getQueryData(\"GetCategories\");\n      // Return the snapshotted value\n      return () =>\n        queryCache.setQueryData(\"GetCategories\", previousCateogories);\n    },\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, categoryIdPassed, rollback) => rollback(),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetCategories\");\n    },\n  });\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n  const newCategory = async (e) => {\n    e.preventDefault();\n    const category = {\n      name: name,\n    };\n    const data = await mutatePostCategory(category);\n    setName(\"\");\n  };\n\n  const deleteCategory = async (id) => {\n    const data = await mutateDeleteCategory(id);\n  };\n  //return this when loading\n  if (status === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //return when error\n  if (status === \"error\") return <div className=\"\">error {error}</div>;\n\n  return (\n    <Box bg=\"fourth100\" minH=\"100vh\">\n      <Navbar />\n      <Box mt=\"40px\">\n        <form onSubmit={newCategory} autoComplete=\"off\">\n          <Box d=\"grid\" gridTemplateColumns=\"1fr 1fr\">\n            <Box color=\"White\" fontSize=\"30px\">\n              category name\n            </Box>\n            <Input\n              width=\"200px\"\n              height=\"30px\"\n              type=\"text\"\n              onChange={handleChange}\n              value={name}\n              name=\"name\"\n            />\n\n            <MyButton\n              bg=\"White\"\n              bgh=\"second100\"\n              bcf=\"fifth200\"\n              color=\"first200\"\n              type=\"submit\"\n            >\n              Submit\n            </MyButton>\n          </Box>\n        </form>\n      </Box>\n      <Grid templateColumns=\"repeat(auto-fit, minmax(200px, 1fr))\" gap={3}>\n        {data.map((category, index) => (\n          <CategoryAndCommonItemCard key={index}>\n            <Box bg=\"first300\" p=\"3px 10px\" borderRadius=\"5px\">\n              {category.name}\n            </Box>\n            <DeleteButton onClick={() => deleteCategory(category.id)}>\n              Delete\n            </DeleteButton>\n          </CategoryAndCommonItemCard>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}