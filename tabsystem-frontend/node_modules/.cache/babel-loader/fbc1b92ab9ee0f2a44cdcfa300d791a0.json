{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/CreateCategory/CreateCategory.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\"; //styled component imports\n\nimport { Box, Icon, Grid, Skeleton, Spinner } from \"@chakra-ui/core\";\nimport { MyButton } from \"../../GlobalStyles/Styles\";\n/** Returns the data from the api https://intern-pokedex.myriadapps.com/api/v1/pokemon/${id}*/\n\nconst fetchCategories = async key => {\n  const response = await fetch(`http://tabsystem.test/api/category`, {\n    method: \"Get\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function CreateCategory() {\n  const [name, setName] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const {\n    status,\n    data = [],\n    error,\n    refetch\n  } = useQuery(\"somethingUnique\", fetchCategories, {});\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const newCategory = async e => {\n    e.preventDefault();\n    const category = {\n      name: name\n    };\n    console.log(category);\n    const response = await fetch(`http://tabsystem.test/api/category`, {\n      method: \"POST\",\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\",\n      // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(category)\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.success) {\n      setMessage(\"Successfully created item\");\n    } else {\n      setMessage(\"Something went wrong\");\n    }\n  }; //return this when loading\n\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })));\n  } //return when error\n\n\n  if (status === \"error\") return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 34\n    }\n  }, \"error \", error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/tabs`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Back\"), data.categories.map(category => /*#__PURE__*/React.createElement(\"div\", {\n    key: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, category.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: newCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"category name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    value: name,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MyButton, {\n    bg: \"first200\",\n    bgh: \"second100\",\n    color: \"white\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Submit\")), message));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/CreateCategory/CreateCategory.jsx"],"names":["React","useState","useEffect","Link","useQuery","Box","Icon","Grid","Skeleton","Spinner","MyButton","fetchCategories","key","response","fetch","method","mode","cache","credentials","headers","Authorization","localStorage","getItem","redirect","referrerPolicy","data","json","console","log","CreateCategory","name","setName","message","setMessage","status","error","refetch","handleChange","event","target","value","newCategory","e","preventDefault","category","body","JSON","stringify","success","categories","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\n\n//styled component imports\nimport { Box, Icon, Grid, Skeleton, Spinner } from \"@chakra-ui/core\";\nimport { MyButton } from \"../../GlobalStyles/Styles\";\n\n/** Returns the data from the api https://intern-pokedex.myriadapps.com/api/v1/pokemon/${id}*/\nconst fetchCategories = async (key) => {\n  const response = await fetch(`http://tabsystem.test/api/category`, {\n    method: \"Get\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function CreateCategory() {\n  const [name, setName] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const { status, data = [], error, refetch } = useQuery(\n    \"somethingUnique\",\n    fetchCategories,\n    {}\n  );\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n  const newCategory = async (e) => {\n    e.preventDefault();\n    const category = {\n      name: name,\n    };\n    console.log(category);\n    const response = await fetch(`http://tabsystem.test/api/category`, {\n      method: \"POST\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\", // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\",\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(category),\n    });\n    const data = await response.json();\n    console.log(data);\n    if (data.success) {\n      setMessage(\"Successfully created item\");\n    } else {\n      setMessage(\"Something went wrong\");\n    }\n  };\n  //return this when loading\n  if (status === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //return when error\n  if (status === \"error\") return <div className=\"\">error {error}</div>;\n\n  return (\n    <div>\n      <Link to={`/tabs`}>Back</Link>\n      {data.categories.map((category) => (\n        <div key={category.id}>{category.name}</div>\n      ))}\n      <div>\n        <form onSubmit={newCategory}>\n          <label>category name</label>\n          <input type=\"text\" onChange={handleChange} value={name} name=\"name\" />\n\n          <MyButton bg=\"first200\" bgh=\"second100\" color=\"white\" type=\"submit\">\n            Submit\n          </MyButton>\n        </form>\n        {message}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}