{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/Components/Login/Login.jsx\";\nimport React, { useState } from \"react\"; //form imports\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\"; //component imports\n\nimport Navbar from \"../Navbar\";\nimport Auth from \"../../Auth\"; //style imports\n\nimport { Box } from \"@chakra-ui/core\";\nimport { Label, Form, FormInput, Button } from \"./Styles\";\nconst validationScema = Yup.object().shape({\n  name: Yup.string().required(\"Must enter an name\"),\n  password: Yup.string().min(4, \"All passwords are at least 4 characters long\").required(\"Must have a password\")\n});\nexport default function Login(props) {\n  const [message, setMessage] = useState(Auth.getMessage());\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    px: \"10%\",\n    height: \"95vh\",\n    bg: \"third100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Login to tabsystem\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, message), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      password: \"\"\n    },\n    validationSchema: validationScema,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n      const user = {\n        name: values.name,\n        password: values.password\n      };\n      Auth.login(() => {\n        props.history.push(\"/dashboard\");\n      }, user);\n      console.log(Auth.getMessage());\n      setMessage(Auth.getMessage());\n      resetForm();\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"example@gmail.com\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Error, {\n    touched: touched.name,\n    message: errors.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"password\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Error, {\n    touched: touched.password,\n    message: errors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    bg: \"first100\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Login\")))));\n}\n\nfunction Error({\n  touched,\n  message\n}) {\n  if (!touched) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 12\n      }\n    }, \"\\xA0\");\n  }\n\n  if (message) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\",\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, message);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"green\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, \"all good\");\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/Components/Login/Login.jsx"],"names":["React","useState","Formik","Yup","Navbar","Auth","Box","Label","Form","FormInput","Button","validationScema","object","shape","name","string","required","password","min","Login","props","message","setMessage","getMessage","values","setSubmitting","resetForm","user","login","history","push","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Error","color","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n//form imports\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n//component imports\nimport Navbar from \"../Navbar\";\nimport Auth from \"../../Auth\";\n//style imports\nimport { Box } from \"@chakra-ui/core\";\nimport { Label, Form, FormInput, Button } from \"./Styles\";\n\nconst validationScema = Yup.object().shape({\n  name: Yup.string().required(\"Must enter an name\"),\n  password: Yup.string()\n    .min(4, \"All passwords are at least 4 characters long\")\n    .required(\"Must have a password\"),\n});\n\nexport default function Login(props) {\n  const [message, setMessage] = useState(Auth.getMessage());\n\n  return (\n    <Box>\n      <Navbar />\n      <Box px=\"10%\" height=\"95vh\" bg=\"third100\">\n        <h1>Login to tabsystem</h1>\n        <p>{message}</p>\n        <Formik\n          initialValues={{ name: \"\", password: \"\" }}\n          validationSchema={validationScema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            const user = {\n              name: values.name,\n              password: values.password,\n            };\n\n            Auth.login(() => {\n              props.history.push(\"/dashboard\");\n            }, user);\n            console.log(Auth.getMessage());\n            setMessage(Auth.getMessage());\n            resetForm();\n            setSubmitting(false);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Form className=\"form-group\">\n                <Label htmlFor=\"name\">name</Label>\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"example@gmail.com\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.name}\n                />\n                <Error touched={touched.name} message={errors.name} />\n              </Form>\n              <Form>\n                <Label htmlFor=\"password\">Password</Label>\n                <FormInput\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n                <Error touched={touched.password} message={errors.password} />\n              </Form>\n              <Button bg=\"first100\" type=\"submit\" disabled={isSubmitting}>\n                Login\n              </Button>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  );\n}\n\nfunction Error({ touched, message }) {\n  if (!touched) {\n    return <div style={{ color: \"red\" }}>&nbsp;</div>;\n  }\n  if (message) {\n    return <div style={{ color: \"red\", textAlign: \"right\" }}>{message}</div>;\n  }\n  return <div style={{ color: \"green\", textAlign: \"right\" }}>all good</div>;\n}\n"]},"metadata":{},"sourceType":"module"}