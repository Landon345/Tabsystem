{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport Navbar from \"../../Components/Navbar\";\nimport CreateTab from \"./CreateTab\";\nimport TabCard from \"../TabDetail/TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const {\n    status: status1,\n    data: tabsData\n  } = useQuery(\"GetTabs\", GetTabs, {});\n  const {\n    status: status2,\n    data: usersData\n  } = useQuery(\"GetUsers\", GetUsers, {});\n\n  const newTab = async (e, selected, nameOnTab, balance) => {\n    e.preventDefault();\n    const tab = {\n      user_id: selected,\n      name: nameOnTab,\n      balance: parseInt(balance)\n    };\n    console.log(tab);\n    const response = await fetch(`http://tabsystem.test/api/tab`, {\n      method: \"POST\",\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\",\n      // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(tab)\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.success) {\n      setMessage(\"Successfully created tab\");\n    }\n  }; //if loading return Loading with a spinner and skeleton\n\n\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })));\n  } //if error return the error\n\n\n  if (status1 === \"error\" || status2 === \"error\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateTab, {\n    users: usersData,\n    newTab: newTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    mx: \"20px\",\n    py: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, tabsData.tabs.map(tab => /*#__PURE__*/React.createElement(Link, {\n    key: tab.id,\n    to: `/tabs/detail/${tab.id}`,\n    style: {\n      textDecoration: \"none\",\n      color: \"black\",\n      margin: \"20px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Tab Name: \", tab.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Balance: \", tab.balance))))));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx"],"names":["React","useState","Link","useQuery","useMutation","queryCache","GetTabs","GetUsers","Navbar","CreateTab","TabCard","Input","Grid","Box","Icon","Skeleton","Spinner","Tabs","status","status1","data","tabsData","status2","usersData","newTab","e","selected","nameOnTab","balance","preventDefault","tab","user_id","name","parseInt","console","log","response","fetch","method","mode","cache","credentials","headers","Authorization","localStorage","getItem","redirect","referrerPolicy","body","JSON","stringify","json","success","setMessage","tabs","map","id","textDecoration","color","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport Navbar from \"../../Components/Navbar\";\nimport CreateTab from \"./CreateTab\";\nimport TabCard from \"../TabDetail/TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const { status: status1, data: tabsData } = useQuery(\"GetTabs\", GetTabs, {});\n  const { status: status2, data: usersData } = useQuery(\n    \"GetUsers\",\n    GetUsers,\n    {}\n  );\n\n  const newTab = async (e, selected, nameOnTab, balance) => {\n    e.preventDefault();\n    const tab = {\n      user_id: selected,\n      name: nameOnTab,\n      balance: parseInt(balance),\n    };\n    console.log(tab);\n    const response = await fetch(`http://tabsystem.test/api/tab`, {\n      method: \"POST\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\", // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\",\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(tab),\n    });\n    const data = await response.json();\n    console.log(data);\n    if (data.success) {\n      setMessage(\"Successfully created tab\");\n    }\n  };\n\n  //if loading return Loading with a spinner and skeleton\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //if error return the error\n  if (status1 === \"error\" || status2 === \"error\") {\n    return <div className=\"\">error</div>;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <CreateTab users={usersData} newTab={newTab} />\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(auto-fit, minmax(300px, 1fr))\"\n        mx=\"20px\"\n        py=\"20px\"\n      >\n        {tabsData.tabs.map((tab) => (\n          <Link\n            key={tab.id}\n            to={`/tabs/detail/${tab.id}`}\n            style={{\n              textDecoration: \"none\",\n              color: \"black\",\n              margin: \"20px 0px\",\n            }}\n          >\n            <div>\n              <p>Tab Name: {tab.name}</p>\n              {/* <p>Site # {tab.users.site_number}</p>\n              <p>User's Name: {tab.users.name}</p> */}\n              <p>Balance: {tab.balance}</p>\n            </div>\n          </Link>\n        ))}\n      </Box>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}