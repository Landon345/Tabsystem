{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Navbar from \"../../Components/Navbar\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n/**Fetch and return the data from https://intern-pokedex.myriadapps.com/api/v1/pokemon/?page=${page}&name=${queryString}*/\n\nconst fetchData = async () => {\n  const response = await fetch(`http://tabsystem.test/api/tab`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const {\n    status,\n    data,\n    error,\n    refetch\n  } = useQuery(fetchData, {}); //if loading return Loading with a spinner and skeleton\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })));\n  } //if error return the error\n\n\n  if (status === \"error\") return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }\n  }, \"error \", error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), data.map(tab => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, tab.name)));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx"],"names":["React","useState","useQuery","Navbar","Input","Grid","Box","Icon","Skeleton","Spinner","fetchData","response","fetch","headers","Authorization","localStorage","getItem","data","json","console","log","Tabs","status","error","refetch","map","tab","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,OAA3C,QAA0D,iBAA1D;AAEA;;AACA,MAAMC,SAAS,GAAG,YAAY;AAC5B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAAF,EAAkC;AAC5DC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADhD;AAEP,sBAAgB;AAFT;AADmD,GAAlC,CAA5B;AAOA,QAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAXD;;AAaA,eAAe,SAASI,IAAT,GAAgB;AAC7B;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUL,IAAAA,IAAV;AAAgBM,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAmCtB,QAAQ,CAACQ,SAAD,EAAY,EAAZ,CAAjD,CAF6B,CAI7B;;AACA,MAAIY,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,QAAQ,EAAC,MAAjC;AAAwC,MAAA,EAAE,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACa,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,CADF,eAIE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAYD,GAlB4B,CAmB7B;;;AACA,MAAIA,MAAM,KAAK,OAAf,EAAwB,oBAAO;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAyBC,KAAzB,CAAP;AAExB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGN,IAAI,CAACQ,GAAL,CAAUC,GAAD,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,GAAG,CAACC,IAAV,CADD,CAFH,CADF;AAQD","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Navbar from \"../../Components/Navbar\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n\n/**Fetch and return the data from https://intern-pokedex.myriadapps.com/api/v1/pokemon/?page=${page}&name=${queryString}*/\nconst fetchData = async () => {\n  const response = await fetch(`http://tabsystem.test/api/tab`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n    },\n  });\n\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const { status, data, error, refetch } = useQuery(fetchData, {});\n\n  //if loading return Loading with a spinner and skeleton\n  if (status === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //if error return the error\n  if (status === \"error\") return <div className=\"\">error {error}</div>;\n\n  return (\n    <div>\n      <Navbar />\n      {data.map((tab) => (\n        <div>{tab.name}</div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}