{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Navbar from \"../../Components/Navbar\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n/**Fetch and return the data from https://intern-pokedex.myriadapps.com/api/v1/pokemon/?page=${page}&name=${queryString}*/\n\nconst fetchData = async key => {\n  const response = await fetch(`http://tabsystem.test/api/tab`, {\n    method: \"Get\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const {\n    status,\n    data,\n    error\n  } = useQuery(\"key\", fetchData, {}); //if loading return Loading with a spinner and skeleton\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })));\n  } //if error return the error\n\n\n  if (status === \"error\") return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }\n  }, \"error\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateTabs, {\n    users: data.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), data.tabs.map(tab => /*#__PURE__*/React.createElement(\"div\", {\n    key: tab.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, tab.name, \" \", tab.balance, \" \", tab.user_id, \" \", tab.users.name)));\n}\n\nfunction CreateTabs({\n  users\n}) {\n  const [selected, setSelected] = useState(null);\n  const [nameOnTab, setNameOnTab] = useState(\"\");\n  const [balance, setBalance] = useState([]);\n  const [message, setMessage] = useState([]);\n\n  const select = userid => {\n    setSelected(userid);\n  };\n\n  const handleChange = event => {\n    if ([event.target.name] == \"name\") {\n      setNameOnTab(event.target.value);\n    } else if ([event.target.name] == \"balance\") {\n      setBalance(event.target.value);\n    }\n  };\n\n  const newTab = async e => {\n    e.preventDefault();\n    const tab = {\n      user_id: selected,\n      name: nameOnTab,\n      balance: parseInt(balance)\n    };\n    console.log(tab);\n    const response = await fetch(`http://tabsystem.test/api/tab`, {\n      method: \"POST\",\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\",\n      // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(tab)\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.success) {\n      setMessage(\"Successfully created tab\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Create a new tab for someone\"), /*#__PURE__*/React.createElement(Box, {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, 300px)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, users.map(user => {\n    if (user.id === selected) {\n      return /*#__PURE__*/React.createElement(Box, {\n        bg: \"first100\",\n        color: \"White\",\n        margin: \"20px\",\n        padding: \"20px\",\n        textAlign: \"center\",\n        onClick: () => select(user.id),\n        cursor: \"pointer\",\n        key: user.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, \" Name: \", user.name), /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, \" Site Number: \", user.site_number));\n    }\n\n    return /*#__PURE__*/React.createElement(Box, {\n      bg: \"second100\",\n      color: \"White\",\n      margin: \"20px\",\n      padding: \"20px\",\n      textAlign: \"center\",\n      onClick: () => select(user.id),\n      cursor: \"pointer\",\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \" Name: \", user.name), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \" Site Number: \", user.site_number));\n  })), selected && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: newTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Name of tab \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange,\n    value: nameOnTab,\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"lable\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Starting Balance\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    onChange: handleChange,\n    value: balance,\n    name: \"balance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Submit\"))), message);\n}\n\nfunction TabCard({\n  id,\n  name,\n  balance,\n  user_id\n}) {}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx"],"names":["React","useState","useQuery","Navbar","Input","Grid","Box","Icon","Skeleton","Spinner","fetchData","key","response","fetch","method","mode","cache","credentials","headers","Authorization","localStorage","getItem","redirect","referrerPolicy","data","json","console","log","Tabs","status","error","users","tabs","map","tab","id","name","balance","user_id","CreateTabs","selected","setSelected","nameOnTab","setNameOnTab","setBalance","message","setMessage","select","userid","handleChange","event","target","value","newTab","e","preventDefault","parseInt","body","JSON","stringify","success","user","site_number","TabCard"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Navbar from \"../../Components/Navbar\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n\n/**Fetch and return the data from https://intern-pokedex.myriadapps.com/api/v1/pokemon/?page=${page}&name=${queryString}*/\nconst fetchData = async (key) => {\n  const response = await fetch(`http://tabsystem.test/api/tab`, {\n    method: \"Get\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n  });\n\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const { status, data, error } = useQuery(\"key\", fetchData, {});\n\n  //if loading return Loading with a spinner and skeleton\n  if (status === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //if error return the error\n  if (status === \"error\") return <div className=\"\">error</div>;\n\n  return (\n    <div>\n      <Navbar />\n      <CreateTabs users={data.users} />\n      {data.tabs.map((tab) => (\n        <div key={tab.id}>\n          {tab.name} {tab.balance} {tab.user_id} {tab.users.name}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction CreateTabs({ users }) {\n  const [selected, setSelected] = useState(null);\n  const [nameOnTab, setNameOnTab] = useState(\"\");\n  const [balance, setBalance] = useState([]);\n  const [message, setMessage] = useState([]);\n  const select = (userid) => {\n    setSelected(userid);\n  };\n  const handleChange = (event) => {\n    if ([event.target.name] == \"name\") {\n      setNameOnTab(event.target.value);\n    } else if ([event.target.name] == \"balance\") {\n      setBalance(event.target.value);\n    }\n  };\n\n  const newTab = async (e) => {\n    e.preventDefault();\n    const tab = {\n      user_id: selected,\n      name: nameOnTab,\n      balance: parseInt(balance),\n    };\n    console.log(tab);\n    const response = await fetch(`http://tabsystem.test/api/tab`, {\n      method: \"POST\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\", // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\",\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(tab),\n    });\n    const data = await response.json();\n    console.log(data);\n    if (data.success) {\n      setMessage(\"Successfully created tab\");\n    }\n  };\n  return (\n    <div>\n      <h3>Create a new tab for someone</h3>\n      <Box display=\"grid\" gridTemplateColumns=\"repeat(auto-fit, 300px)\">\n        {users.map((user) => {\n          if (user.id === selected) {\n            return (\n              <Box\n                bg=\"first100\"\n                color=\"White\"\n                margin=\"20px\"\n                padding=\"20px\"\n                textAlign=\"center\"\n                onClick={() => select(user.id)}\n                cursor=\"pointer\"\n                key={user.id}\n              >\n                <Box> Name: {user.name}</Box>\n                <Box> Site Number: {user.site_number}</Box>\n              </Box>\n            );\n          }\n          return (\n            <Box\n              bg=\"second100\"\n              color=\"White\"\n              margin=\"20px\"\n              padding=\"20px\"\n              textAlign=\"center\"\n              onClick={() => select(user.id)}\n              cursor=\"pointer\"\n              key={user.id}\n            >\n              <Box> Name: {user.name}</Box>\n              <Box> Site Number: {user.site_number}</Box>\n            </Box>\n          );\n        })}\n      </Box>\n\n      {selected && (\n        <div>\n          <form onSubmit={newTab}>\n            <label>Name of tab </label>\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              value={nameOnTab}\n              name=\"name\"\n            />\n            <lable>Starting Balance</lable>\n            <input\n              type=\"number\"\n              onChange={handleChange}\n              value={balance}\n              name=\"balance\"\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      )}\n      {message}\n    </div>\n  );\n}\n\nfunction TabCard({ id, name, balance, user_id }) {}\n"]},"metadata":{},"sourceType":"module"}