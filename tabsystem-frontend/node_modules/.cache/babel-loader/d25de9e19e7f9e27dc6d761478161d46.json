{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs, PostTab, DeleteTab } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport Navbar from \"../../Components/Navbar\";\nimport TabCard from \"../TabDetail/TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\nimport { MyButton, DeleteButton } from \"../../GlobalStyles/Styles\";\nimport { TabStyleCard, MyLink } from \"./Styles\";\nimport CreateTab from \"./CreateTab\";\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const {\n    status: status1,\n    data: tabsData,\n    refetch: refetchTabs\n  } = useQuery(\"GetTabs\", GetTabs, {});\n  const {\n    status: status2,\n    data: usersData\n  } = useQuery(\"GetUsers\", GetUsers, {});\n  const [mutate] = useMutation(PostTab, {\n    onMutate: newTab => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      newTab = { ...newTab,\n        site_number: 12\n      };\n      queryCache.cancelQueries(\"GetTabs\"); // Snapshot the previous value\n\n      const previousTabs = queryCache.getQueryData(\"GetTabs\"); // Optimistically update to the new value\n\n      queryCache.setQueryData(\"GetTabs\", old => [...old, newTab]); // Return the snapshotted value\n\n      return () => queryCache.setQueryData(\"GetTabs\", previousTabs);\n    },\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, newTab, rollback) => rollback(),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetTabs\");\n    }\n  });\n\n  const newTab = async tab => {\n    const data = await mutate(tab);\n    console.log(data);\n    return data;\n  };\n\n  const deleteTab = async tabid => {\n    await DeleteTab(tabid);\n    refetchTabs();\n  }; //if loading return Loading with a spinner and skeleton\n\n\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })));\n  } //if error return the error\n\n\n  if (status1 === \"error\" || status2 === \"error\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    bg: \"fourth100\",\n    minH: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CreateTab, {\n    users: usersData,\n    newTab: newTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    mx: \"20px\",\n    py: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, tabsData.map(tab => /*#__PURE__*/React.createElement(TabStyleCard, {\n    key: tab.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Tab Name: \", tab.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Site # \", tab.user.site_number), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"User's Name: \", tab.user.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Balance: \", tab.balance)), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MyLink, {\n    href: `/tabs/detail/${tab.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"More Detail\")), /*#__PURE__*/React.createElement(DeleteButton, {\n    onClick: () => deleteTab(tab.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Tabs/Tabs.jsx"],"names":["React","useState","Link","useQuery","useMutation","queryCache","GetTabs","PostTab","DeleteTab","GetUsers","Navbar","TabCard","Input","Grid","Box","Icon","Skeleton","Spinner","MyButton","DeleteButton","TabStyleCard","MyLink","CreateTab","Tabs","status","status1","data","tabsData","refetch","refetchTabs","status2","usersData","mutate","onMutate","newTab","site_number","cancelQueries","previousTabs","getQueryData","setQueryData","old","onError","err","rollback","onSettled","refetchQueries","tab","console","log","deleteTab","tabid","map","id","name","user","balance"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs, PostTab, DeleteTab } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport Navbar from \"../../Components/Navbar\";\nimport TabCard from \"../TabDetail/TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\nimport { MyButton, DeleteButton } from \"../../GlobalStyles/Styles\";\nimport { TabStyleCard, MyLink } from \"./Styles\";\nimport CreateTab from \"./CreateTab\";\n\nexport default function Tabs() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const { status: status1, data: tabsData, refetch: refetchTabs } = useQuery(\n    \"GetTabs\",\n    GetTabs,\n    {}\n  );\n  const { status: status2, data: usersData } = useQuery(\n    \"GetUsers\",\n    GetUsers,\n    {}\n  );\n\n  const [mutate] = useMutation(PostTab, {\n    onMutate: (newTab) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      newTab = { ...newTab, site_number: 12 };\n      queryCache.cancelQueries(\"GetTabs\");\n\n      // Snapshot the previous value\n      const previousTabs = queryCache.getQueryData(\"GetTabs\");\n      // Optimistically update to the new value\n      queryCache.setQueryData(\"GetTabs\", (old) => [...old, newTab]);\n\n      // Return the snapshotted value\n      return () => queryCache.setQueryData(\"GetTabs\", previousTabs);\n    },\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, newTab, rollback) => rollback(),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetTabs\");\n    },\n  });\n\n  const newTab = async (tab) => {\n    const data = await mutate(tab);\n    console.log(data);\n    return data;\n  };\n  const deleteTab = async (tabid) => {\n    await DeleteTab(tabid);\n    refetchTabs();\n  };\n\n  //if loading return Loading with a spinner and skeleton\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return (\n      <div className=\"\">\n        <div>\n          <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n            Loading... <Spinner />\n          </Box>\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n          <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        </div>\n      </div>\n    );\n  }\n  //if error return the error\n  if (status1 === \"error\" || status2 === \"error\") {\n    return <div className=\"\">error</div>;\n  }\n\n  return (\n    <Box bg=\"fourth100\" minH=\"100vh\">\n      <Navbar />\n      <CreateTab users={usersData} newTab={newTab} />\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(auto-fit, minmax(300px, 1fr))\"\n        mx=\"20px\"\n        py=\"20px\"\n      >\n        {tabsData.map((tab) => (\n          <TabStyleCard key={tab.id}>\n            <div>\n              <p>Tab Name: {tab.name}</p>\n              <p>Site # {tab.user.site_number}</p>\n              <p>User's Name: {tab.user.name}</p>\n              <p>Balance: {tab.balance}</p>\n            </div>\n            <Box>\n              <MyLink href={`/tabs/detail/${tab.id}`}>More Detail</MyLink>\n            </Box>\n            <DeleteButton onClick={() => deleteTab(tab.id)}>\n              Delete\n            </DeleteButton>\n          </TabStyleCard>\n        ))}\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}