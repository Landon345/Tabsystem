{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/TabDetail/TabDetail.jsx\";\n//state handler imports\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabById } from \"../../Api/Tabs\";\nimport { GetItems, PostItem } from \"../../Api/Items\";\nimport { GetCategories } from \"../../Api/Categories\";\nimport { GetCommonItems } from \"../../Api/CommonItems\";\nimport { GetUserOfTab } from \"../../Api/Users\"; //styled component imports\n\nimport { Box, Icon, Grid, Skeleton, Spinner } from \"@chakra-ui/core\"; //component imports\n\nimport TabCard from \"./TabCard\";\nimport Navbar from \"../../Components/Navbar\";\n/** the top most functional component in the TabDetail folder. Responsible for gathering and distributing data. */\n\nexport default function TabDetail({\n  history,\n  match\n}) {\n  //set my id state which is either 1 or the id specified in the url\n  const [id, setId] = useState(!match.params.id ? 1 : parseInt(match.params.id)); //fetch the data using id as a paramerter to find what data to return.\n\n  const {\n    status: status1,\n    data: tabData\n  } = useQuery([\"GetTabById\", id], GetTabById, {});\n  const {\n    status: status2,\n    data: categoriesData\n  } = useQuery([\"GetCategories\", id], GetCategories, {});\n  const {\n    status: status3,\n    data: commonitemsData\n  } = useQuery([\"GetCommonItems\", id], GetCommonItems, {});\n  const {\n    status: status4,\n    data: UserData\n  } = useQuery([\"GetUserOfTab\", id], GetUserOfTab, {});\n  const [mutate] = useMutation(PostItem, {\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, myNewItem, rollback) => console.log(err),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetItems\");\n      queryCache.refetchQueries(\"GetTabById\");\n    }\n  });\n\n  const newItem = async item => {\n    const data = await mutate(item); // console.log(data);\n\n    return data;\n  }; //return this when loading\n\n\n  if (status1 === \"loading\" || status2 === \"loading\" || status3 === \"loading\" || status4 === \"loading\") {\n    return /*#__PURE__*/React.createElement(Box, {\n      minH: \"100vh\",\n      bg: \"first300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  } //return when error\n\n\n  if (status1 === \"error\" || status2 === \"error\" || status3 === \"error\" || status4 === \"error\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }, \"error \");\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    bg: \"first300\",\n    minH: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TabCard, {\n    id: tabData.tab.id,\n    name: tabData.tab.name,\n    user_name: UserData.name,\n    balance: tabData.tab.balance,\n    site_number: UserData.site_number,\n    items: tabData.tab.items,\n    categories: categoriesData,\n    common_items: commonitemsData,\n    newItem: newItem,\n    queryCache: queryCache,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/TabDetail/TabDetail.jsx"],"names":["React","useState","useQuery","useMutation","queryCache","GetTabById","GetItems","PostItem","GetCategories","GetCommonItems","GetUserOfTab","Box","Icon","Grid","Skeleton","Spinner","TabCard","Navbar","TabDetail","history","match","id","setId","params","parseInt","status","status1","data","tabData","status2","categoriesData","status3","commonitemsData","status4","UserData","mutate","onError","err","myNewItem","rollback","console","log","onSettled","refetchQueries","newItem","item","tab","name","balance","site_number","items"],"mappings":"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","sourcesContent":["//state handler imports\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabById } from \"../../Api/Tabs\";\nimport { GetItems, PostItem } from \"../../Api/Items\";\nimport { GetCategories } from \"../../Api/Categories\";\nimport { GetCommonItems } from \"../../Api/CommonItems\";\nimport { GetUserOfTab } from \"../../Api/Users\";\n\n//styled component imports\nimport { Box, Icon, Grid, Skeleton, Spinner } from \"@chakra-ui/core\";\n\n//component imports\nimport TabCard from \"./TabCard\";\nimport Navbar from \"../../Components/Navbar\";\n\n/** the top most functional component in the TabDetail folder. Responsible for gathering and distributing data. */\nexport default function TabDetail({ history, match }) {\n  //set my id state which is either 1 or the id specified in the url\n  const [id, setId] = useState(\n    !match.params.id ? 1 : parseInt(match.params.id)\n  );\n\n  //fetch the data using id as a paramerter to find what data to return.\n  const { status: status1, data: tabData } = useQuery(\n    [\"GetTabById\", id],\n    GetTabById,\n    {}\n  );\n  const { status: status2, data: categoriesData } = useQuery(\n    [\"GetCategories\", id],\n    GetCategories,\n    {}\n  );\n  const { status: status3, data: commonitemsData } = useQuery(\n    [\"GetCommonItems\", id],\n    GetCommonItems,\n    {}\n  );\n  const { status: status4, data: UserData } = useQuery(\n    [\"GetUserOfTab\", id],\n    GetUserOfTab,\n    {}\n  );\n\n  const [mutate] = useMutation(PostItem, {\n    // If the mutation fails, use the value returned from onMutate to roll back\n    onError: (err, myNewItem, rollback) => console.log(err),\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryCache.refetchQueries(\"GetItems\");\n      queryCache.refetchQueries(\"GetTabById\");\n    },\n  });\n\n  const newItem = async (item) => {\n    const data = await mutate(item);\n    // console.log(data);\n    return data;\n  };\n\n  //return this when loading\n  if (\n    status1 === \"loading\" ||\n    status2 === \"loading\" ||\n    status3 === \"loading\" ||\n    status4 === \"loading\"\n  ) {\n    return (\n      <Box minH=\"100vh\" bg=\"first300\">\n        <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n          Loading... <Spinner />\n        </Box>\n        <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n      </Box>\n    );\n  }\n  //return when error\n  if (\n    status1 === \"error\" ||\n    status2 === \"error\" ||\n    status3 === \"error\" ||\n    status4 === \"error\"\n  ) {\n    return <div className=\"\">error </div>;\n  }\n\n  return (\n    <Box bg=\"first300\" minH=\"100vh\">\n      <Navbar />\n      <TabCard\n        id={tabData.tab.id}\n        name={tabData.tab.name}\n        user_name={UserData.name}\n        balance={tabData.tab.balance}\n        site_number={UserData.site_number}\n        items={tabData.tab.items}\n        categories={categoriesData}\n        common_items={commonitemsData}\n        newItem={newItem}\n        queryCache={queryCache}\n      />\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}