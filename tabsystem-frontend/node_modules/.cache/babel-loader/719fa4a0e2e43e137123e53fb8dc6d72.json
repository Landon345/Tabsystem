{"ast":null,"code":"class Auth {\n  constructor() {\n    this.authenticated = false;\n    this.admin = false;\n    this.message = \"\";\n\n    if (localStorage.getItem(\"token\")) {\n      this.authenticated = true;\n    }\n\n    if (localStorage.getItem(\"token\") && localStorage.getItem(\"admin\")) {\n      this.authenticated = true;\n      this.admin = true;\n    }\n  }\n\n  async register(cb, newUser) {\n    this.authenticated = true;\n    cb();\n  }\n\n  async login(cb, user) {\n    const response = await fetch(\"http://tabsystem.test/api/login\", {\n      method: \"POST\",\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\",\n      // include, *same-origin, omit\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(user)\n    });\n    const data = await response.json();\n\n    if (data.success) {\n      localStorage.setItem(\"token\", data.data.api_token);\n      this.authenticated = true;\n\n      if (data.data.user.admin) {\n        localStorage.setItem(\"admin\", true);\n        this.admin = true;\n      }\n    } else {\n      this.message = \"Username or password incorrect.\";\n      localStorage.removeItem(\"token\");\n      this.authenticated = false;\n    }\n\n    await cb();\n  }\n\n  async logout(cb) {\n    const response = await fetch(`http://tabsystem.test/api/logout`, {\n      method: \"POST\",\n      mode: \"cors\",\n      // no-cors, *cors, same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\",\n      // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\" // no-referrer, *client\n\n    });\n    this.authenticated = false;\n    cb();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n\n  isAdmin() {\n    return this.admin;\n  }\n\n  getMessage() {\n    return this.message;\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/Auth.js"],"names":["Auth","constructor","authenticated","admin","message","localStorage","getItem","register","cb","newUser","login","user","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","data","json","success","setItem","api_token","removeItem","logout","Authorization","isAuthenticated","isAdmin","getMessage"],"mappings":"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","sourcesContent":["class Auth {\n  constructor() {\n    this.authenticated = false;\n    this.admin = false;\n    this.message = \"\";\n    if (localStorage.getItem(\"token\")) {\n      this.authenticated = true;\n    }\n    if (localStorage.getItem(\"token\") && localStorage.getItem(\"admin\")) {\n      this.authenticated = true;\n      this.admin = true;\n    }\n  }\n\n  async register(cb, newUser) {\n    this.authenticated = true;\n    cb();\n  }\n\n  async login(cb, user) {\n    const response = await fetch(\"http://tabsystem.test/api/login\", {\n      method: \"POST\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\", // include, *same-origin, omit\n      headers: { \"content-type\": \"application/json\" },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(user),\n    });\n    const data = await response.json();\n    if (data.success) {\n      localStorage.setItem(\"token\", data.data.api_token);\n      this.authenticated = true;\n      if (data.data.user.admin) {\n        localStorage.setItem(\"admin\", true);\n        this.admin = true;\n      }\n    } else {\n      this.message = \"Username or password incorrect.\";\n      localStorage.removeItem(\"token\");\n      this.authenticated = false;\n    }\n\n    await cb();\n  }\n\n  async logout(cb) {\n    const response = await fetch(`http://tabsystem.test/api/logout`, {\n      method: \"POST\",\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"omit\", // include, *same-origin, omit\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"content-type\": \"application/json\",\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n    });\n    this.authenticated = false;\n    cb();\n  }\n  isAuthenticated() {\n    return this.authenticated;\n  }\n  isAdmin() {\n    return this.admin;\n  }\n  getMessage() {\n    return this.message;\n  }\n}\n\nexport default new Auth();\n"]},"metadata":{},"sourceType":"module"}