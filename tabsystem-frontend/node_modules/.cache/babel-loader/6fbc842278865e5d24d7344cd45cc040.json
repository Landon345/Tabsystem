{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Icon from \"../Icon\";\nimport Button from \"../Button\";\nimport Box from \"../Box\";\nvar IconButton = forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n      isRound = _ref.isRound,\n      ariaLabel = _ref[\"aria-label\"],\n      rest = _objectWithoutPropertiesLoose(_ref, [\"icon\", \"isRound\", \"aria-label\"]); // Remove some props before passing it to IconButton\n\n\n  var isFullWidth = rest.isFullWidth,\n      leftIcon = rest.leftIcon,\n      rightIcon = rest.rightIcon,\n      loadingText = rest.loadingText,\n      props = _objectWithoutPropertiesLoose(rest, [\"isFullWidth\", \"leftIcon\", \"rightIcon\", \"loadingText\"]);\n\n  return jsx(Button, _extends({\n    p: \"0\",\n    borderRadius: isRound ? \"full\" : \"md\",\n    ref: ref,\n    \"aria-label\": ariaLabel\n  }, props), typeof icon === \"string\" ? jsx(Icon, {\n    name: icon,\n    focusable: \"false\",\n    color: \"currentColor\",\n    \"aria-hidden\": true\n  }) : jsx(Box, {\n    as: icon,\n    \"aria-hidden\": true,\n    focusable: \"false\",\n    color: \"currentColor\"\n  }));\n});\nIconButton.displayName = \"IconButton\";\nIconButton.defaultProps = Button.defaultProps;\nexport default IconButton;","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/node_modules/@chakra-ui/core/dist/es/IconButton/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","jsx","forwardRef","Icon","Button","Box","IconButton","_ref","ref","icon","isRound","ariaLabel","rest","isFullWidth","leftIcon","rightIcon","loadingText","props","p","borderRadius","name","focusable","color","as","displayName","defaultProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAOC,6BAAP,MAA0C,qDAA1C;AAEA;;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,IAAIC,UAAU,GAAGJ,UAAU,CAAC,UAAUK,IAAV,EAAgBC,GAAhB,EAAqB;AAC/C,MAAIC,IAAI,GAAGF,IAAI,CAACE,IAAhB;AAAA,MACIC,OAAO,GAAGH,IAAI,CAACG,OADnB;AAAA,MAEIC,SAAS,GAAGJ,IAAI,CAAC,YAAD,CAFpB;AAAA,MAGIK,IAAI,GAAGZ,6BAA6B,CAACO,IAAD,EAAO,CAAC,MAAD,EAAS,SAAT,EAAoB,YAApB,CAAP,CAHxC,CAD+C,CAM/C;;;AACA,MAAIM,WAAW,GAAGD,IAAI,CAACC,WAAvB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACG,SAFrB;AAAA,MAGIC,WAAW,GAAGJ,IAAI,CAACI,WAHvB;AAAA,MAIIC,KAAK,GAAGjB,6BAA6B,CAACY,IAAD,EAAO,CAAC,aAAD,EAAgB,UAAhB,EAA4B,WAA5B,EAAyC,aAAzC,CAAP,CAJzC;;AAMA,SAAOX,GAAG,CAACG,MAAD,EAASL,QAAQ,CAAC;AAC1BmB,IAAAA,CAAC,EAAE,GADuB;AAE1BC,IAAAA,YAAY,EAAET,OAAO,GAAG,MAAH,GAAY,IAFP;AAG1BF,IAAAA,GAAG,EAAEA,GAHqB;AAI1B,kBAAcG;AAJY,GAAD,EAKxBM,KALwB,CAAjB,EAKC,OAAOR,IAAP,KAAgB,QAAhB,GAA2BR,GAAG,CAACE,IAAD,EAAO;AAC9CiB,IAAAA,IAAI,EAAEX,IADwC;AAE9CY,IAAAA,SAAS,EAAE,OAFmC;AAG9CC,IAAAA,KAAK,EAAE,cAHuC;AAI9C,mBAAe;AAJ+B,GAAP,CAA9B,GAKNrB,GAAG,CAACI,GAAD,EAAM;AACZkB,IAAAA,EAAE,EAAEd,IADQ;AAEZ,mBAAe,IAFH;AAGZY,IAAAA,SAAS,EAAE,OAHC;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAAN,CAVE,CAAV;AAgBD,CA7B0B,CAA3B;AA8BAhB,UAAU,CAACkB,WAAX,GAAyB,YAAzB;AACAlB,UAAU,CAACmB,YAAX,GAA0BrB,MAAM,CAACqB,YAAjC;AACA,eAAenB,UAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Icon from \"../Icon\";\nimport Button from \"../Button\";\nimport Box from \"../Box\";\nvar IconButton = forwardRef(function (_ref, ref) {\n  var icon = _ref.icon,\n      isRound = _ref.isRound,\n      ariaLabel = _ref[\"aria-label\"],\n      rest = _objectWithoutPropertiesLoose(_ref, [\"icon\", \"isRound\", \"aria-label\"]);\n\n  // Remove some props before passing it to IconButton\n  var isFullWidth = rest.isFullWidth,\n      leftIcon = rest.leftIcon,\n      rightIcon = rest.rightIcon,\n      loadingText = rest.loadingText,\n      props = _objectWithoutPropertiesLoose(rest, [\"isFullWidth\", \"leftIcon\", \"rightIcon\", \"loadingText\"]);\n\n  return jsx(Button, _extends({\n    p: \"0\",\n    borderRadius: isRound ? \"full\" : \"md\",\n    ref: ref,\n    \"aria-label\": ariaLabel\n  }, props), typeof icon === \"string\" ? jsx(Icon, {\n    name: icon,\n    focusable: \"false\",\n    color: \"currentColor\",\n    \"aria-hidden\": true\n  }) : jsx(Box, {\n    as: icon,\n    \"aria-hidden\": true,\n    focusable: \"false\",\n    color: \"currentColor\"\n  }));\n});\nIconButton.displayName = \"IconButton\";\nIconButton.defaultProps = Button.defaultProps;\nexport default IconButton;"]},"metadata":{},"sourceType":"module"}