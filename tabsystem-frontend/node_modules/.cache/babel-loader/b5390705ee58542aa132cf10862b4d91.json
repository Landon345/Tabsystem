{"ast":null,"code":"import { BASE_URL } from \"./BaseUrl\";\nexport const GetTabs = async key => {\n  const response = await fetch(`${BASE_URL}/tab`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetTabById = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/tab/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetUserTabs = async key => {\n  const response = await fetch(`${BASE_URL}/user/tabs`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetUserTabById = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/user/tabs/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetUserTabItems = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/user/tabs/${id}/items`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PostTab = async newTab => {\n  const response = await fetch(`${BASE_URL}/tab`, {\n    method: \"POST\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(newTab)\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PutTab = async updateTab => {\n  const response = await fetch(`${BASE_URL}/tab`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(updateTab)\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const AddCreditToTab = async tabidandcredit => {\n  const response = await fetch(`${BASE_URL}/addcredit`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(tabidandcredit)\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const DeleteTab = async id => {\n  const response = await fetch(`${BASE_URL}/tab/${id}`, {\n    method: \"DELETE\",\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\",\n    // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\"\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\" // no-referrer, *client\n\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/Api/Tabs.js"],"names":["BASE_URL","GetTabs","key","response","fetch","method","headers","Accept","Authorization","localStorage","getItem","data","json","console","log","GetTabById","id","accept","GetUserTabs","GetUserTabById","GetUserTabItems","PostTab","newTab","mode","cache","credentials","redirect","referrerPolicy","body","JSON","stringify","PutTab","updateTab","AddCreditToTab","tabidandcredit","DeleteTab"],"mappings":"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","sourcesContent":["import { BASE_URL } from \"./BaseUrl\";\n\nexport const GetTabs = async (key) => {\n  const response = await fetch(`${BASE_URL}/tab`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetTabById = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/tab/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetUserTabs = async (key) => {\n  const response = await fetch(`${BASE_URL}/user/tabs`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetUserTabById = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/user/tabs/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const GetUserTabItems = async (key, id) => {\n  const response = await fetch(`${BASE_URL}/user/tabs/${id}/items`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PostTab = async (newTab) => {\n  const response = await fetch(`${BASE_URL}/tab`, {\n    method: \"POST\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(newTab),\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const PutTab = async (updateTab) => {\n  const response = await fetch(`${BASE_URL}/tab`, {\n    method: \"PUT\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(updateTab),\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const AddCreditToTab = async (tabidandcredit) => {\n  const response = await fetch(`${BASE_URL}/addcredit`, {\n    method: \"PUT\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(tabidandcredit),\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\nexport const DeleteTab = async (id) => {\n  const response = await fetch(`${BASE_URL}/tab/${id}`, {\n    method: \"DELETE\",\n    mode: \"cors\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, *same-origin, omit\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      \"content-type\": \"application/json\",\n      accept: \"application/json\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n  });\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}