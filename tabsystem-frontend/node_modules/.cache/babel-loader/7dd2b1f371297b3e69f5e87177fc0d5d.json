{"ast":null,"code":"var _jsxFileName = \"/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Dashboard/Dashboard.jsx\";\nimport Navbar from \"../../Components/Navbar\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs, PostTab, DeleteTab } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport TabCard from \"../TabDetail/TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\nexport default function Dashboard() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const {\n    status: status1,\n    data: tabsData,\n    refetch: refetchTabs\n  } = useQuery(\"GetTabs\", GetTabs, {});\n  const {\n    status: status2,\n    data: usersData\n  } = useQuery(\"GetUsers\", GetUsers, {}); //if loading return Loading with a spinner and skeleton\n\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return /*#__PURE__*/React.createElement(Box, {\n      minH: \"100vh\",\n      bg: \"first300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      textAlign: \"center\",\n      fontSize: \"50px\",\n      mt: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Loading... \", /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      height: \"50px\",\n      my: \"10px\",\n      mx: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  } //if error return the error\n\n\n  if (status1 === \"error\" || status2 === \"error\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"error\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Where I shall show stats\"));\n}","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/src/ProtectedAdminComponents/Dashboard/Dashboard.jsx"],"names":["Navbar","React","useState","Link","useQuery","useMutation","queryCache","GetTabs","PostTab","DeleteTab","GetUsers","TabCard","Input","Grid","Box","Icon","Skeleton","Spinner","Dashboard","status","status1","data","tabsData","refetch","refetchTabs","status2","usersData"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,aAAlD;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,SAA3B,QAA4C,gBAA5C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,OAA3C,QAA0D,iBAA1D;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC;AACA,QAAM;AAAEC,IAAAA,MAAM,EAAEC,OAAV;AAAmBC,IAAAA,IAAI,EAAEC,QAAzB;AAAmCC,IAAAA,OAAO,EAAEC;AAA5C,MAA4DpB,QAAQ,CACxE,SADwE,EAExEG,OAFwE,EAGxE,EAHwE,CAA1E;AAKA,QAAM;AAAEY,IAAAA,MAAM,EAAEM,OAAV;AAAmBJ,IAAAA,IAAI,EAAEK;AAAzB,MAAuCtB,QAAQ,CACnD,UADmD,EAEnDM,QAFmD,EAGnD,EAHmD,CAArD,CAPkC,CAalC;;AACA,MAAIU,OAAO,KAAK,SAAZ,IAAyBK,OAAO,KAAK,SAAzC,EAAoD;AAClD,wBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAC,OAAV;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,QAAQ,EAAC,MAAjC;AAAwC,MAAA,EAAE,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACa,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,CADF,eAIE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAC,MAA3B;AAAkC,MAAA,EAAE,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD,GAzBiC,CA0BlC;;;AACA,MAAIL,OAAO,KAAK,OAAZ,IAAuBK,OAAO,KAAK,OAAvC,EAAgD;AAC9C,wBAAO;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CADF;AAMD","sourcesContent":["import Navbar from \"../../Components/Navbar\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useMutation, queryCache } from \"react-query\";\nimport { GetTabs, PostTab, DeleteTab } from \"../../Api/Tabs\";\nimport { GetUsers } from \"../../Api/Users\";\nimport TabCard from \"../TabDetail/TabCard\";\nimport { Input, Grid, Box, Icon, Skeleton, Spinner } from \"@chakra-ui/core\";\n\nexport default function Dashboard() {\n  //Use the useQuery supported by react-query to fetch and cache the data.\n  const { status: status1, data: tabsData, refetch: refetchTabs } = useQuery(\n    \"GetTabs\",\n    GetTabs,\n    {}\n  );\n  const { status: status2, data: usersData } = useQuery(\n    \"GetUsers\",\n    GetUsers,\n    {}\n  );\n\n  //if loading return Loading with a spinner and skeleton\n  if (status1 === \"loading\" || status2 === \"loading\") {\n    return (\n      <Box minH=\"100vh\" bg=\"first300\">\n        <Box textAlign=\"center\" fontSize=\"50px\" mt=\"60px\">\n          Loading... <Spinner />\n        </Box>\n        <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n        <Skeleton height=\"50px\" my=\"10px\" mx=\"10%\" />\n      </Box>\n    );\n  }\n  //if error return the error\n  if (status1 === \"error\" || status2 === \"error\") {\n    return <div className=\"\">error</div>;\n  }\n  return (\n    <div>\n      <Navbar />\n      <h1>Where I shall show stats</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}