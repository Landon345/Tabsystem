{"ast":null,"code":"import { useState, useEffect, useCallback } from \"react\";\nimport copy from \"copy-to-clipboard\";\nexport function useClipboard(value) {\n  var _useState = useState(false),\n      hasCopied = _useState[0],\n      setHasCopied = _useState[1];\n\n  var onCopy = useCallback(function () {\n    var didCopy = copy(value);\n    setHasCopied(didCopy);\n  }, [value]);\n  useEffect(function () {\n    if (hasCopied) {\n      var id = setTimeout(function () {\n        setHasCopied(false);\n      }, 1500);\n      return function () {\n        return clearTimeout(id);\n      };\n    }\n  }, [hasCopied]);\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\nexport default useClipboard;","map":{"version":3,"sources":["/Users/landonschlangen/Documents/WebDevelopmentFolder/ReactApps/tabsystem/node_modules/@chakra-ui/core/dist/es/useClipboard/index.js"],"names":["useState","useEffect","useCallback","copy","useClipboard","value","_useState","hasCopied","setHasCopied","onCopy","didCopy","id","setTimeout","clearTimeout"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,MAAIC,SAAS,GAAGN,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACIO,SAAS,GAAGD,SAAS,CAAC,CAAD,CADzB;AAAA,MAEIE,YAAY,GAAGF,SAAS,CAAC,CAAD,CAF5B;;AAIA,MAAIG,MAAM,GAAGP,WAAW,CAAC,YAAY;AACnC,QAAIQ,OAAO,GAAGP,IAAI,CAACE,KAAD,CAAlB;AACAG,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAHuB,EAGrB,CAACL,KAAD,CAHqB,CAAxB;AAIAJ,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIM,SAAJ,EAAe;AACb,UAAII,EAAE,GAAGC,UAAU,CAAC,YAAY;AAC9BJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAFkB,EAEhB,IAFgB,CAAnB;AAGA,aAAO,YAAY;AACjB,eAAOK,YAAY,CAACF,EAAD,CAAnB;AACD,OAFD;AAGD;AACF,GATQ,EASN,CAACJ,SAAD,CATM,CAAT;AAUA,SAAO;AACLF,IAAAA,KAAK,EAAEA,KADF;AAELI,IAAAA,MAAM,EAAEA,MAFH;AAGLF,IAAAA,SAAS,EAAEA;AAHN,GAAP;AAKD;AACD,eAAeH,YAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport copy from \"copy-to-clipboard\";\nexport function useClipboard(value) {\n  var _useState = useState(false),\n      hasCopied = _useState[0],\n      setHasCopied = _useState[1];\n\n  var onCopy = useCallback(function () {\n    var didCopy = copy(value);\n    setHasCopied(didCopy);\n  }, [value]);\n  useEffect(function () {\n    if (hasCopied) {\n      var id = setTimeout(function () {\n        setHasCopied(false);\n      }, 1500);\n      return function () {\n        return clearTimeout(id);\n      };\n    }\n  }, [hasCopied]);\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\nexport default useClipboard;"]},"metadata":{},"sourceType":"module"}